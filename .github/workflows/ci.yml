name: Build and Publish Docker

on:
  push:
    tags:
      - '*-v*'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      REPO_OWNER: ${{ github.repository_owner }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ env.REPO_OWNER }}
          password: ${{ secrets.CR_PAT }}

      - name: Get the version
        id: get_version
        run: |
          VERSION=$(echo "${GITHUB_REF}" | sed -e 's#refs/tags/##g' | awk -F'-' '{print $NF}')
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build and Push Docker Images
        run: |
          declare -A images=(
            ["squid-v"]="proxy/squid:squid-lxc"
            ["ansible-rockylinux-v"]="ansible/rockylinux:ansible-rockylinux"
            ["ansible-almalinux-v"]="ansible/almalinux:ansible-almalinux"
            ["ansible-ubuntu-v"]="ansible/ubuntu:ansible-ubuntu"
            ["airflow2-v"]="web/airflow:airflow2"
            ["litespeed-v"]="web/litespeed:litespeed"
            ["ingress-host-lister-v"]="k8s/ingress-host-lister:ingress-host-lister"
            ["tfaws-v"]="terraform/aws:terraform-aws"
            ["tfgcp-v"]="terraform/gcp:terraform-gcp"
            ["nginx-v"]="web/nginx:nginx"
            ["php80-v"]="web/php/8.0:php80"
            ["php82-v"]="web/php/8.2:php82"
          )
          
          for tag_prefix in "${!images[@]}"; do
            if [[ "${GITHUB_REF}" == *"${tag_prefix}"* ]]; then
              context=$(echo "${images[$tag_prefix]}" | cut -d':' -f1)
              image_name=$(echo "${images[$tag_prefix]}" | cut -d':' -f2)

              echo "Building and pushing image: ghcr.io/${{ env.REPO_OWNER }}/${image_name}:${{ env.VERSION }}"

              docker/build-push-action@v6 --env \
                DOCKER_CONTENT_TRUST=1 \
                BUILDKIT_MULTI_PLATFORM=1 \
                platforms="linux/amd64,linux/arm64" \
                context="./${context}" \
                push=true \
                provenance=false \
                tags="ghcr.io/${{ env.REPO_OWNER }}/${image_name}:latest,ghcr.io/${{ env.REPO_OWNER }}/${image_name}:${{ env.VERSION }}"
            fi
          done

      - name: Run Dockle Security Scan
        run: |
          for image in "${!images[@]}"; do
            if [[ "${GITHUB_REF}" == *"${image}"* ]]; then
              docker run --rm \
                -v /var/run/docker.sock:/var/run/docker.sock \
                -v $(pwd):/root/.docker/ \
                goodwithtech/dockle:latest \
                --input-type docker \
                --input-file "ghcr.io/${{ env.REPO_OWNER }}/${image}:latest" \
                --output json > dockle-report.json
              break
            fi
          done

      - name: Upload Dockle Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: Dockle Report
          path: dockle-report.json
